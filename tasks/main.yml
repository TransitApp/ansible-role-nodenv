---
- name: install required libraries
  apt: name={{ item }} state=present
  with_items:
    - git-core
    - curl
    - build-essential

- name: check if nodenv is installed
  stat:
    path: /home/{{ nodenv_user }}/{{ nodenv_path }}
  register: nvd

- name: download {{ nodenv_version }}
  become_user: "{{ nodenv_user }}"
  when: nvd.stat.isdir is not defined
  git:
    repo: https://github.com/nodenv/nodenv.git
    dest: /home/{{ nodenv_user }}/{{ nodenv_path }}

- name: create versions directory
  become_user: "{{ nodenv_user }}"
  file:
    path: /home/{{ nodenv_user }}/{{ item }}
    state: directory
    mode: 0775
  with_items:
    - "{{ nodenv_path }}/versions"

- name: install {{ nodenv_version }}
  become_user: "{{ nodenv_user }}"
  lineinfile:
    dest: .bashrc
    line: "{{ item }}"
  with_items:
    - 'export PATH=~/{{ nodenv_path }}/bin:$PATH'
    - 'eval "$(nodenv init -)"'

- name: check installed versions
  shell:
    ls /home/{{ nodenv_user }}/{{ nodenv_path }}/versions
  register: installed_nodes

- set_fact:
    nodes: "{{ nodenv_versions | difference(installed_nodes.stdout_lines) }}"

- name: install versions {{ nodes }}
  become_user: "{{ nodenv_user }}"
  shell:
    ~/{{ nodenv_path }}/bin/nodenv install "{{ item }}"
  with_items: "{{ nodes }}"
  when: nodes | length | int > 0

- name: set global version to {{ nodenv_default_version }}
  become_user: "{{ nodenv_user }}"
  lineinfile:
    dest: /home/{{ nodenv_user }}/{{ nodenv_path }}/version
    line: "{{ nodenv_default_version }}"
    state: present
    create: yes
